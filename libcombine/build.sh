#/usr/bin/env zsh

# exit on failure
set -e
# echo commands as they are run
set -o verbose

# cd to the directory of this script
cd "$( dirname "${BASH_SOURCE[0]}" )"
THIS_DIR=`pwd`
SRCNAME=libcombine
if [[ -z "${PYTHON+x}" ]]; then
  INSTNAME=$SRCNAME-$OS_STR
else
  INSTNAME=$SRCNAME-$OS_STR-$CP
fi

if [[ "$LIBSBMLNS" == "OFF" ]]; then
  INSTNAME="$INSTNAME"-nons
fi

# -DCMAKE_CXX_FLAGS="-DLIBSBML_CPP_NAMESPACE_USE='using namespace libsbml; using namespace libnuml; using namespace libsedml; using namespace libcombine;'"

mkdir -p $ROOT/build/$INSTNAME
cd $_
pwd
rm -rf *
if [[ -z "${PYTHON+x}" ]]; then
  echo "Not building Python bindings"
  "$CMAKE" "$CMAKE_GEN" $CMAKE_PLATFORM_FLAGS -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$ROOT/install/$INSTNAME -DLIBSBML_LIBRARY=$LIBSBML_STATIC -DLIBSBML_INCLUDE_DIR=$LIBSBML_INCLUDE -DEXTRA_LIBS="$LIBSBML_EXTRA_LIBS" -DZIPPER_LIBRARY=$ZIPPER -DZIPPER_INCLUDE_DIR=$ZIPPER_INCLUDE_DIR -DLIBZ_LIBRARY="$ZLIB" -DWITH_CPP_NAMESPACE="$LIBSBMLNS" $ROOT/src/$SRCNAME
else
  echo "Building Python bindings"
  "$CMAKE" "$CMAKE_GEN" $CMAKE_PLATFORM_FLAGS -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$ROOT/install/$INSTNAME -DLIBSBML_LIBRARY=$LIBSBML_STATIC -DLIBSBML_INCLUDE_DIR=$LIBSBML_INCLUDE -DEXTRA_LIBS="$LIBSBML_EXTRA_LIBS" -DZIPPER_LIBRARY=$ZIPPER -DZIPPER_INCLUDE_DIR=$ZIPPER_INCLUDE_DIR -DLIBZ_LIBRARY="$ZLIB" -DWITH_PYTHON=ON -DPYTHON_EXECUTABLE=$PYTHON -DPYTHON_INCLUDE_DIR=$PYTHON_INCLUDE -DPYTHON_USE_DYNAMIC_LOOKUP=ON "$PYTHON_LINKING" -DSWIG_EXECUTABLE="$SWIG" -DWITH_CPP_NAMESPACE="$LIBSBMLNS" $ROOT/src/$SRCNAME
fi
eval $CMAKE_BUILD_CMD
